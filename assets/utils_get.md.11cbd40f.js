import{_ as s,c as a,o as n,V as l}from"./chunks/framework.b1ea3778.js";const F=JSON.parse('{"title":"get","description":"","frontmatter":{"realPath":"docs/utils/get.md"},"headers":[],"relativePath":"utils/get.md","filePath":"utils/get.md","lastUpdated":1686481224000}'),p={name:"utils/get.md"},o=l(`<h1 id="get" tabindex="-1">get <a class="header-anchor" href="#get" aria-label="Permalink to &quot;get&quot;">​</a></h1><p>获取对象属性值</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(object: Record</span><span style="color:#F97583;">&lt;</span><span style="color:#E1E4E8;">string, any</span><span style="color:#F97583;">&gt;</span><span style="color:#E1E4E8;">, path: string);</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(object: Record</span><span style="color:#D73A49;">&lt;</span><span style="color:#24292E;">string, any</span><span style="color:#D73A49;">&gt;</span><span style="color:#24292E;">, path: string);</span></span></code></pre></div><h2 id="参数" tabindex="-1">参数 <a class="header-anchor" href="#参数" aria-label="Permalink to &quot;参数&quot;">​</a></h2><ol><li><code>object</code> 对象</li><li><code>path</code> 属性值路径</li></ol><h2 id="例子" tabindex="-1">例子 <a class="header-anchor" href="#例子" aria-label="Permalink to &quot;例子&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { get } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@baberat/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E1E4E8;">    a: </span><span style="color:#79B8FF;">1</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">    b: {</span></span>
<span class="line"><span style="color:#E1E4E8;">        c: </span><span style="color:#79B8FF;">2</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        d: {</span></span>
<span class="line"><span style="color:#E1E4E8;">            e: </span><span style="color:#9ECBFF;">&#39;3&#39;</span><span style="color:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#E1E4E8;">        },</span></span>
<span class="line"><span style="color:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(obj, </span><span style="color:#9ECBFF;">&#39;a&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// =&gt; 1</span></span>
<span class="line"><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(obj, </span><span style="color:#9ECBFF;">&#39;b.c&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// =&gt; 2</span></span>
<span class="line"><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(obj, </span><span style="color:#9ECBFF;">&#39;b.d.e&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// =&gt; 3</span></span>
<span class="line"><span style="color:#B392F0;">get</span><span style="color:#E1E4E8;">(obj, </span><span style="color:#9ECBFF;">&#39;b.d&#39;</span><span style="color:#E1E4E8;">) </span><span style="color:#6A737D;">// =&gt; {e: &#39;3&#39;}</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { get } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@baberat/utils&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> {</span></span>
<span class="line"><span style="color:#24292E;">    a: </span><span style="color:#005CC5;">1</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">    b: {</span></span>
<span class="line"><span style="color:#24292E;">        c: </span><span style="color:#005CC5;">2</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        d: {</span></span>
<span class="line"><span style="color:#24292E;">            e: </span><span style="color:#032F62;">&#39;3&#39;</span><span style="color:#24292E;">,</span></span>
<span class="line"><span style="color:#24292E;">        },</span></span>
<span class="line"><span style="color:#24292E;">    },</span></span>
<span class="line"><span style="color:#24292E;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(obj, </span><span style="color:#032F62;">&#39;a&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// =&gt; 1</span></span>
<span class="line"><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(obj, </span><span style="color:#032F62;">&#39;b.c&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// =&gt; 2</span></span>
<span class="line"><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(obj, </span><span style="color:#032F62;">&#39;b.d.e&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// =&gt; 3</span></span>
<span class="line"><span style="color:#6F42C1;">get</span><span style="color:#24292E;">(obj, </span><span style="color:#032F62;">&#39;b.d&#39;</span><span style="color:#24292E;">) </span><span style="color:#6A737D;">// =&gt; {e: &#39;3&#39;}</span></span></code></pre></div>`,7),e=[o];function t(c,r,E,y,i,d){return n(),a("div",null,e)}const b=s(p,[["render",t]]);export{F as __pageData,b as default};
