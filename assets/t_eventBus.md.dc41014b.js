import{_ as e,c as s,o as a,V as n}from"./chunks/framework.b1ea3778.js";const h=JSON.parse('{"title":"eventBus","description":"","frontmatter":{"realPath":"docs/t/eventBus.md"},"headers":[],"relativePath":"t/eventBus.md","filePath":"t/eventBus.md","lastUpdated":1686481224000}'),t={name:"t/eventBus.md"},l=n(`<h1 id="eventbus" tabindex="-1">eventBus <a class="header-anchor" href="#eventbus" aria-label="Permalink to &quot;eventBus&quot;">​</a></h1><p>事件总线，<a href="https://www.npmjs.com/package/tiny-emitter" target="_blank" rel="noreferrer">详见</a></p><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { eventBus } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@baberat/utils/t&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">eventBus.</span><span style="color:#B392F0;">$on</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;some-event&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#F97583;">function</span><span style="color:#E1E4E8;"> (</span><span style="color:#FFAB70;">arg1</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">arg2</span><span style="color:#E1E4E8;">, </span><span style="color:#FFAB70;">arg3</span><span style="color:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#E1E4E8;">    </span><span style="color:#6A737D;">// TODO</span></span>
<span class="line"><span style="color:#E1E4E8;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">eventBus.</span><span style="color:#B392F0;">$emit</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;some-event&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;arg1 value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;arg2 value&#39;</span><span style="color:#E1E4E8;">, </span><span style="color:#9ECBFF;">&#39;arg3 value&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { eventBus } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@baberat/utils/t&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">eventBus.</span><span style="color:#6F42C1;">$on</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;some-event&#39;</span><span style="color:#24292E;">, </span><span style="color:#D73A49;">function</span><span style="color:#24292E;"> (</span><span style="color:#E36209;">arg1</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arg2</span><span style="color:#24292E;">, </span><span style="color:#E36209;">arg3</span><span style="color:#24292E;">) {</span></span>
<span class="line"><span style="color:#24292E;">    </span><span style="color:#6A737D;">// TODO</span></span>
<span class="line"><span style="color:#24292E;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">eventBus.</span><span style="color:#6F42C1;">$emit</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;some-event&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;arg1 value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;arg2 value&#39;</span><span style="color:#24292E;">, </span><span style="color:#032F62;">&#39;arg3 value&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2><h3 id="eventbus-on-event-callback-context" tabindex="-1">eventBus.$on(event, callback[, context]) <a class="header-anchor" href="#eventbus-on-event-callback-context" aria-label="Permalink to &quot;eventBus.$on(event, callback[, context])&quot;">​</a></h3><p>订阅事件</p><ul><li><code>event</code> - the name of the event to subscribe to</li><li><code>callback</code> - the function to call when event is emitted</li><li><code>context</code> - (OPTIONAL) - the context to bind the event callback to</li></ul><h3 id="eventbus-once-event-callback-context" tabindex="-1">eventBus.$once(event, callback[, context]) <a class="header-anchor" href="#eventbus-once-event-callback-context" aria-label="Permalink to &quot;eventBus.$once(event, callback[, context])&quot;">​</a></h3><p>只订阅一次事件</p><ul><li><code>event</code> - the name of the event to subscribe to</li><li><code>callback</code> - the function to call when event is emitted</li><li><code>context</code> - (OPTIONAL) - the context to bind the event callback to</li></ul><h3 id="eventbus-off-event-callback" tabindex="-1">eventBus.$off(event[, callback]) <a class="header-anchor" href="#eventbus-off-event-callback" aria-label="Permalink to &quot;eventBus.$off(event[, callback])&quot;">​</a></h3><p>取消订阅一个事件或所有事件。 如果没有提供回调，它将取消您对所有事件的订阅。</p><ul><li><code>event</code> - the name of the event to unsubscribe from</li><li><code>callback</code> - the function used when binding to the event</li></ul><h3 id="eventbus-emit-event-arguments" tabindex="-1">eventBus.$emit(event[, arguments...]) <a class="header-anchor" href="#eventbus-emit-event-arguments" aria-label="Permalink to &quot;eventBus.$emit(event[, arguments...])&quot;">​</a></h3><p>触发已订阅的事件</p><ul><li><code>event</code> - the event name to emit</li><li><code>arguments...</code> - any number of arguments to pass to the event subscribers</li></ul>`,17),o=[l];function c(p,r,i,u,d,v){return a(),s("div",null,o)}const y=e(t,[["render",c]]);export{h as __pageData,y as default};
