import{_ as s,c as a,o as n,V as p}from"./chunks/framework.b1ea3778.js";const _=JSON.parse('{"title":"qs","description":"","frontmatter":{"realPath":"docs/t/qs.md"},"headers":[],"relativePath":"t/qs.md","filePath":"t/qs.md","lastUpdated":1686481224000}'),l={name:"t/qs.md"},o=p(`<h1 id="qs" tabindex="-1">qs <a class="header-anchor" href="#qs" aria-label="Permalink to &quot;qs&quot;">​</a></h1><p>字符串解析器，<a href="https://www.npmjs.com/package/qs" target="_blank" rel="noreferrer">详见</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { qs } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@baberat/utils/t&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { assert } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vitest&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">obj</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qs.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;a=c&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">assert.</span><span style="color:#B392F0;">deepEqual</span><span style="color:#E1E4E8;">(obj, { a: </span><span style="color:#9ECBFF;">&#39;c&#39;</span><span style="color:#E1E4E8;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">str</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> qs.</span><span style="color:#B392F0;">stringify</span><span style="color:#E1E4E8;">(obj)</span></span>
<span class="line"><span style="color:#E1E4E8;">assert.</span><span style="color:#B392F0;">equal</span><span style="color:#E1E4E8;">(str, </span><span style="color:#9ECBFF;">&#39;a=c&#39;</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { qs } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@baberat/utils/t&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { assert } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vitest&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">obj</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qs.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;a=c&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">assert.</span><span style="color:#6F42C1;">deepEqual</span><span style="color:#24292E;">(obj, { a: </span><span style="color:#032F62;">&#39;c&#39;</span><span style="color:#24292E;"> })</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">str</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> qs.</span><span style="color:#6F42C1;">stringify</span><span style="color:#24292E;">(obj)</span></span>
<span class="line"><span style="color:#24292E;">assert.</span><span style="color:#6F42C1;">equal</span><span style="color:#24292E;">(str, </span><span style="color:#032F62;">&#39;a=c&#39;</span><span style="color:#24292E;">)</span></span></code></pre></div>`,3),e=[o];function t(c,r,E,y,i,F){return n(),a("div",null,e)}const q=s(l,[["render",t]]);export{_ as __pageData,q as default};
