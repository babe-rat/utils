import{_ as s,c as a,o as n,V as p}from"./chunks/framework.b1ea3778.js";const d=JSON.parse('{"title":"exprEval","description":"","frontmatter":{"realPath":"docs/t/exprEval.md"},"headers":[],"relativePath":"t/exprEval.md","filePath":"t/exprEval.md","lastUpdated":1686481224000}'),l={name:"t/exprEval.md"},o=p(`<h1 id="expreval" tabindex="-1">exprEval <a class="header-anchor" href="#expreval" aria-label="Permalink to &quot;exprEval&quot;">​</a></h1><p>数学表达式求值，<a href="https://www.npmjs.com/package/expr-eval" target="_blank" rel="noreferrer">详见</a></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki github-dark vp-code-dark"><code><span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { exprEval } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;@baberat/utils/t&#39;</span></span>
<span class="line"><span style="color:#F97583;">import</span><span style="color:#E1E4E8;"> { assert } </span><span style="color:#F97583;">from</span><span style="color:#E1E4E8;"> </span><span style="color:#9ECBFF;">&#39;vitest&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#E1E4E8;"> </span><span style="color:#79B8FF;">expr</span><span style="color:#E1E4E8;"> </span><span style="color:#F97583;">=</span><span style="color:#E1E4E8;"> exprEval.</span><span style="color:#B392F0;">parse</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;2 * x + 1&#39;</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#E1E4E8;">assert.</span><span style="color:#B392F0;">equal</span><span style="color:#E1E4E8;">(expr.</span><span style="color:#B392F0;">evaluate</span><span style="color:#E1E4E8;">({ x: </span><span style="color:#79B8FF;">3</span><span style="color:#E1E4E8;"> }), </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#E1E4E8;">assert.</span><span style="color:#B392F0;">equal</span><span style="color:#E1E4E8;">(exprEval.</span><span style="color:#B392F0;">evaluate</span><span style="color:#E1E4E8;">(</span><span style="color:#9ECBFF;">&#39;6 * x&#39;</span><span style="color:#E1E4E8;">, { x: </span><span style="color:#79B8FF;">7</span><span style="color:#E1E4E8;"> }), </span><span style="color:#79B8FF;">42</span><span style="color:#E1E4E8;">)</span></span></code></pre><pre class="shiki github-light vp-code-light"><code><span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { exprEval } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;@baberat/utils/t&#39;</span></span>
<span class="line"><span style="color:#D73A49;">import</span><span style="color:#24292E;"> { assert } </span><span style="color:#D73A49;">from</span><span style="color:#24292E;"> </span><span style="color:#032F62;">&#39;vitest&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;">const</span><span style="color:#24292E;"> </span><span style="color:#005CC5;">expr</span><span style="color:#24292E;"> </span><span style="color:#D73A49;">=</span><span style="color:#24292E;"> exprEval.</span><span style="color:#6F42C1;">parse</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;2 * x + 1&#39;</span><span style="color:#24292E;">)</span></span>
<span class="line"><span style="color:#24292E;">assert.</span><span style="color:#6F42C1;">equal</span><span style="color:#24292E;">(expr.</span><span style="color:#6F42C1;">evaluate</span><span style="color:#24292E;">({ x: </span><span style="color:#005CC5;">3</span><span style="color:#24292E;"> }), </span><span style="color:#005CC5;">7</span><span style="color:#24292E;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#24292E;">assert.</span><span style="color:#6F42C1;">equal</span><span style="color:#24292E;">(exprEval.</span><span style="color:#6F42C1;">evaluate</span><span style="color:#24292E;">(</span><span style="color:#032F62;">&#39;6 * x&#39;</span><span style="color:#24292E;">, { x: </span><span style="color:#005CC5;">7</span><span style="color:#24292E;"> }), </span><span style="color:#005CC5;">42</span><span style="color:#24292E;">)</span></span></code></pre></div>`,3),e=[o];function t(r,c,E,y,i,F){return n(),a("div",null,e)}const v=s(l,[["render",t]]);export{d as __pageData,v as default};
